{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","s","buttonsBox","map","option","button","join","type","onClick","Section","title","children","section","Notification","massage","notification","App","state","leaveFeedback","setState","prevState","this","percents","Math","round","countTotalFeedback","goodCount","neutralCount","badCount","totalCount","positivePercentCount","countPositiveFeedbackPercentage","Object","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,oCAAoC,KAAO,8BAA8B,IAAM,6BAA6B,QAAU,mC,iBCA9LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,qMCclBC,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,gBCYSC,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,WAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAW,CAACC,IAAEI,OAAQJ,IAAEG,IAASE,KAAK,KAEtCC,KAAK,SACLC,QAAS,WACPT,EAAgBK,IALpB,SAQGA,GANIA,S,gBCGAK,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASX,UAAWC,IAAEW,QAAtB,UACE,oBAAIZ,UAAWC,IAAES,MAAjB,SAAyBA,IACxBC,M,gBCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,mBAAGd,UAAWC,IAAEc,aAAhB,SAA+BD,OC0DtBE,E,4MAxDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,cAAgB,SAAAd,GACd,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAASgB,EAAUhB,GAAU,O,mEAKhC,OAAOiB,KAAKJ,MAAMzB,KAAO6B,KAAKJ,MAAMxB,QAAU4B,KAAKJ,MAAMvB,M,wDAIzD,IAAM4B,EAAWC,KAAKC,MACnBH,KAAKJ,MAAMzB,KAAO6B,KAAKI,qBAAwB,KAElD,OAAqC,IAA9BJ,KAAKI,qBAA6BH,EAAW,I,+BAIpD,IAAMI,EAAYL,KAAKJ,MAAMzB,KACvBmC,EAAeN,KAAKJ,MAAMxB,QAC1BmC,EAAWP,KAAKJ,MAAMvB,IACtBmC,EAAaR,KAAKI,qBAClBK,EAAuBT,KAAKU,kCAElC,OACE,qCACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASkC,OAAOC,KAAKZ,KAAKJ,OAC1BlB,gBAAiBsB,KAAKH,kBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACkB,IAAfmB,EACC,cAAC,EAAD,CAAcf,QAAQ,sBAEtB,cAAC,EAAD,CACEtB,KAAMkC,EACNjC,QAASkC,EACTjC,IAAKkC,EACLjC,MAAOkC,EACPjC,mBAAoBkC,a,GAhDhBI,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35091a5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1AOjG\",\"buttonsBox\":\"FeedbackOptions_buttonsBox__17Clb\",\"good\":\"FeedbackOptions_good__3xgHa\",\"bad\":\"FeedbackOptions_bad__3qTfI\",\"neutral\":\"FeedbackOptions_neutral__1ELzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1rAC5\",\"title\":\"Section_title__19GVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2NT7q\"};","import PropTypes from 'prop-types';\nimport './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.buttonsBox}>\n      {options.map(option => (\n        <button\n          className={[s.button, s[option]].join(' ')}\n          key={option}\n          type=\"button\"\n          onClick={() => {\n            onLeaveFeedback(option);\n          }}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ massage }) {\n  return (\n    <>\n      <p className={s.notification}>{massage}</p>\n    </>\n  );\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import './App.css';\nimport React from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const percents = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100,\n    );\n    return this.countTotalFeedback() !== 0 ? percents : 0;\n  }\n\n  render() {\n    const goodCount = this.state.good;\n    const neutralCount = this.state.neutral;\n    const badCount = this.state.bad;\n    const totalCount = this.countTotalFeedback();\n    const positivePercentCount = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalCount === 0 ? (\n            <Notification massage=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={goodCount}\n              neutral={neutralCount}\n              bad={badCount}\n              total={totalCount}\n              positivePercentage={positivePercentCount}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}